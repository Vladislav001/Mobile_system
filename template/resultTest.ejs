<link rel="stylesheet" href="/css/styleResultTest.css">
<% layout('layout/page') -%>
<% block('title') -%>

<h1><b>CT</b></h1>
  <form class="form-updateStudent" name="cabinet_updateStudent">
  <div class="informationAboutStudent">

    <table cellspacing="0">
      <tr>
          <th>Email</th>
      </tr>
      <tr>
          <td><input name="updateEmailStudent" type="text" value="<%=emailStudent%>" class="form-control" id="input-updateNameStudent" placeholder="Name" required></td>


          <td><button type="submit" class="btn btn-primary updateStudent" data-loading-text="Sending..."id="updateStudent">Обновить данные</button></td>
      </tr>
  </table>
  </div>
</form>

<div class="currentQuestion">
<div id="textCurrentQuestion"><b>Текущий вопрос: </div></b><div id="currentQuestion"><%=currentQuestion%></div>
<br>
</div>

<form class="form-deleteStudent" name="cabinet_deleteStudent">
<button type="submit" class="btn btn-primary deleteStudent" data-loading-text="Sending..."id="deleteStudent">Удалить пользователя</button>
</form>

  <h2><b>Результаты Теста</b></h2>
  <form class="form-resultsTest">
  <div class="informationAboutStudentTest">
  <table cellspacing="0" id="tl_results">
    <tr>
        <th>№</th>
        <th>Ответ</th>
    </tr>
</table>

</div>
<br><br>


<script>
var config = {
    apiKey: "AIzaSyBp77uO9nPjY8yGwjeBCuB2DFdsIL8Xpg8",
    authDomain: "mobilesystem-df40d.firebaseapp.com",
    databaseURL: "https://mobilesystem-df40d.firebaseio.com",
    projectId: "mobilesystem-df40d",
    storageBucket: "mobilesystem-df40d.appspot.com",
    messagingSenderId: "855414029476"
  };
  firebase.initializeApp(config);

// Отслеживаем текущий вопрос студента
var refStudents = firebase.database().ref("Users/" + "<%=id%>");



// устанавливаем слушатель child_changed
refStudents.on('child_changed', function(data) {
// существующий текущий вопр был изменен, получаем снэпшот, берем оттуда данные и обновляем пользовательский интерфейс
refStudents.once("value")
 .then(function(snapshotState) {
   var currentQuestion = snapshotState.child('current_question').val();

       var currentQuestionHTML = String (currentQuestion + 1);

       document.getElementById('currentQuestion').innerHTML = currentQuestionHTML;
 });
});


// Тут удалили refAnswer из за ejs
var refAnswer = firebase.database().ref("Users/" + "<%=id%>" + "/test_results" );

// устанавливаем слушатель child_changed
refAnswer.on('child_added', function(snapshot) {

  var answer;
  var countCorrectAnswer;

    if(snapshot.child('answer').val() == "Неверно") {
       answer = "<font color=" + "#D50000" + ">Неверно</font>"
     }

      if(snapshot.child('answer').val() == "Верно") {
       answer = "<font color=" + "#4CAF50"+ ">Верно</font>"
     }

  if (snapshot.child('answer').val() != null) {
    $('#tl_results tbody').append('<tr cla ss="child"><td>' + (Number(snapshot.key) + 1) + '</td>' +
                                                    '<td>' + answer + '</td>' + '</tr>');
                                                      }
});

</script>

<script>

  // google.load("visualization", "1", {packages:["corechart"]});
  // google.setOnLoadCallback(drawChart);
  // function drawChart() {
  //  var data = google.visualization.arrayToDataTable([
  //   ['Вопрос', 'Правильность'],
  //   ['Верно',     78.09],
  //   ['Неверно', 20.95]
  //  ]);
  //  var options = {
  //   title: 'Результаты теста',
  //   is3D: true
  //  };
  //  var chart = new google.visualization.PieChart(document.getElementById('air'));
  //   chart.draw(data, options);
  // }
 </script>

<script>
// Клиентский код //
// Человек вводит логин, email,
$(document.forms['cabinet_updateStudent']).on('submit', function() {
var form = $(this);
$('.error', form).html('');
$(":submit", form).button("loading");
// Этот логин, email, пароль отправляются на сервер
$.ajax({
  url: "/result_test/id<%=id%>", // роут: require('./registration').post
  method: "POST",
  data: form.serialize(),
  complete: function() {
    $(":submit", form).button("reset");
  },
  statusCode: {
    // если ответ сервера 200 - перенаправляем человека в личный кабинет(успешно создали нового пользователя)
    200: function() {
    location.reload();
    },
    // если 403 - высвечивается ошибка(уже есть такой пользователь)
    403: function(jqXHR) {
      var error = JSON.parse(jqXHR.responseText);
      $('.error', form).html(error.message);
    }
  }
});  //window.location.href = "/";
return false;

});
</script>

<script>
// Клиентский код //
// Человек вводит логин, email,
$(document.forms['cabinet_deleteStudent']).on('submit', function() {
var form = $(this);
$('.error', form).html('');
$(":submit", form).button("loading");
// Этот логин, email, пароль отправляются на сервер
$.ajax({
  url: "/deleteStudent/id<%=id%>", // роут: require('./registration').post
  method: "POST",
  data: form.serialize(),
  complete: function() {
    $(":submit", form).button("reset");
  }
  // ,
  // statusCode: {
  //   // если ответ сервера 200 - перенаправляем человека в личный кабинет(успешно создали нового пользователя)
  //   200: function() {
  //     form.html("Вы успешно зарегестрировались").addClass('alert-success');
  //     window.location.href = "/personalArea";
  //   }
  //,
  //   // если 403 - высвечивается ошибка(уже есть такой пользователь)
  //   403: function(jqXHR) {
  //     var error = JSON.parse(jqXHR.responseText);
  //     $('.error', form).html(error.message);
  //   }
  // }
});  //window.location.href = "/";
//return false;
window.location.href = "/personalArea";
return false;
location.reload();
});
</script>
